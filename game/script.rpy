# Определяем персонажей игры.
define gh = Character('Призрак', color="#62496d", image='ghost') # Призрак
define gg = Character("[playerName]", color="#225c58") # Главный герой
define fr = Character("[friendName]", color="#7a4040") # Друг главного героя

# Переменные, показывающие, много ли времени провел игрок в комнате общежития
define time = 0
define bool_time = False

# Переменная для отслеживания состояния подсказки
define info_panel_closed = False
define info_panel_closed_1 = False

# Переменная взаимоотношений с другом
define freindship_fr = 0

# Начальная (опорная) локация в баре - центральный зал бара (для свободной навигации)
default current_loc = "bar_front"

# Инициализация начальных имен гг и друга, а также спрайта друга
$ playerName = "Игрок"
$ friendName = "Игрок"
$ friendSprite = ""

#Инициализация звука НЕ РАБОТАЕТ
init:
    $ hover_sound = "create_character.mp3"  # Путь к вашему звуковому файлу

# Переменная для отслеживания состояния всплывающей подсказки в баре (свободная навигация)
init python:
    if not hasattr(persistent, 'info_panel_shown'):
        persistent.info_panel_shown = False


# Функция для воспроизведения звука при наведении НЕ РАБОТАЕТ
python:
    def play_hover_sound():
        renpy.sound.play(hover_sound)


# Начало игры: гг звонит узнать, прошел ли он собеседование
label start:

    # Фон стола с компьютером от первого лица
    scene bg table1

    "Место действия: общежитие"

    "Главный герой звонит узнать, приняли ли его на работу"

    "Работодатель" "Здравствуйте, по какому поводу вы звоните?"

    # ВСТАВИТЬ НУЖНЫЕ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННЫХ

    jump create_character

    return

# Блок выбора пола и имени гг (а также пола и спрайта его друга)
label create_character:

    # Меню выбора одного из двух вариантов
    menu:

        #Подсказка в диалоговом окне
        "Выберите пол персонажа"

        # Гг - парень, ее друг - тоже парень
        "♂ Я хотел бы узнать, приняли меня на работу или нет":
            # При наведении на вариант, должен играть звук НЕ РАБОТАЕТ
            $ renpy.sound.play(hover_sound)
            # Вводим имя гг и запоминаем его в переменной
            $ playerName = renpy.input("Введите мужское имя", length=12).strip() or "Михаил"
            $ gender_symbol = "♂"
            # Спрайт друга будет находиться в папке characters/boy
            $ friendSprite = "boy"
            # Имя друга
            $ friendName = "Владимир"
            # Настраиваем окончания для мужского рода
            $ verb_end = "" # Остальные глаголы
            $ past_verb_end = "л" # Глаголы прошедшего времени
            
        # Гг - девушка, ее друг - тоже девушка
        "♀ Я хотела бы узнать, приняли меня на работу или нет.":
            # При наведении на вариант, должен играть звук НЕ РАБОТАЕТ
            $ renpy.sound.play(hover_sound)
            # Вводим имя гг и запоминаем его в переменной
            $ playerName = renpy.input("Введите женское имя", length=12).strip() or "Алиса"
            $ gender_symbol = "♀"
            # Спрайт друга будет находиться в папке characters/girl
            $ friendSprite = "girl"
            # Имя друга
            $ friendName = "Лиза"
            # Настраиваем окончания для женского рода
            $ verb_end = "а" # Остальные глаголы
            $ past_verb_end = "ла" # Глаголы прошедшего времени

    # Показываем предупреждение, что пересоздать персонажа будет нельзя
    "Отнеситесь серьезно к созданию персонажа, так как потом пересоздать будет нельзя."

    # Меню выбора: уверены ли вы в создании персонажа
    menu:
        # Подсказка в диалоговом окне
        "Что вы хотите сделать?"

        # Если уверены в создании персонажа
        "Продолжить":
            # Переходите в следующий блок
            jump continue_start

        # Если не уверены в создании персонажа
        "Пересоздать":
            # Возвращаетесь в блок создания персонажа
            jump create_character

    return

# Блок диалога с работодателем и мыслей героя по поводу ситуации
label continue_start:

    "Работодатель" "Пожалуйста, скажите как Вас зовут"

    gg "Мое имя - [playerName]"

    "Работодатель" "Извините, [playerName], Вы нам не подходите."

    gg "Какое же я ничтожество"

    # ВСТАВИТЬ НУЖНЫЕ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННЫХ

    # Перемещаемся в блок с комнатой гг
    jump room

    return

# Блок, в котором гг находится в своей комнате
label room:

    # Фон комнаты гг в общежитии
    scene bg room2 with dissolve

    "Герой описывает комнату."

    # ВСТАВИТЬ НУЖНЫЕ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННОЙ

    # Перемещаемся в блок с интерактивностью по комнате
    jump move_in_room

    return

# Блок, в котором можно изучить комнату гг (интерактивный фон)
label move_in_room:

    # Прячем диалоговое окно
    window hide

    # Показываем фон комнаты, если он не был показан ранее
    if not persistent.background_shown:
        show bg room2 with dissolve
        # Меняем глобальную переменную на True, так как фон был показан
        $ persistent.background_shown = True

    # Запускаем интерактивный экран с плавным эффектом
    show screen mapScreen with dissolve

    # Включаем интерактивное взаимодействие
    $ result = ui.interact()

    return

# Блок: коридор общаги, гг идет на встречу к другу
# Если гг потыкался на количество предметов >=7, то он опоздает на встречу
label go_to_hall:

    # Показываем фон коридора общаги
    show bg hall2 with dissolve

    "Спустя некоторое время блужданий по общаге..."

    # Проверяем, если игрок "тыкался" больше 7 раз
    if time >= 7:
        # Меняем логическую переменную на True
        $ bool_time = True

    "Главный герой идет в бар"

    # ВСТАВИТЬ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННОЙ

    # Перемещаемся в блок, где гг идет с другом в бар
    jump bar_outside

    return

# Блок: гг встретился с другом и идет в бар
label bar_outside:

    # Показываем фон перед входом в бар
    scene bg bar_outside with dissolve

    # ВСТАВИТЬ СПРАЙТ ДРУГА ГГ

    # ВСТАВИТЬ РЕПЛИКИ

    # Проверка, провел ли игрок слишком много времени в комнате
    if bool_time:
        fr "[playerName], ты чего так долго? Я уже уста[past_verb_end] тебя ждать!!!"
        gg "Прости, действительно много времени уже прошло..."
    else:
        fr "Привет, [playerName], давно не виделись с тобой!"
        gg "Рад[verb_end] тебя видеть, [friendName]!"

    # Подводка к выбору, который повлияет на отношения с другом
    fr "Рассказывай, как у тебя дела?"

    # Выбор, который повлияет на отношения с другом
    menu:
        "Внимание! Ваш выбор повлияет на отношения с данным персонажем."

        # Хороший выбор
        "Рассказать о проблемах в поиске работы":
            # Плюс дружба (изменить логику по необходимости)
            $ freindship_fr += 1
            gg "Да никак не могу найти себе работу..."
            fr "Не волнуйся, у тебя все обязательно получится, я в тебя верю!"
            # ЗАМЕНИТЬ ТЕКСТ ВСПЛЫВАЮЩЕГО СООБЩЕНИЯ
            $ renpy.notify("Ваш друг рад, что вы доверились ему")

        # Плохой выбор
        "Не доверять другу свои проблемы":
            # Минус дружба (изменить логику по необходимости)
            $ freindship_fr -= 1
            gg "Все нормально. Пожалуйста, не устраивай мне допросы."
            fr "...Вижу ты не в настроении...хаха..извини, что заде[past_verb_end] тебя..."
            # ЗАМЕНИТЬ ТЕКСТ ВСПЛЫВАЮЩЕГО СООБЩЕНИЯ
            $ renpy.notify("Ваш ответ задел вашего друга")

    "Друзья поговорили. Друг предлагает зайти в бар. Вход подсвечивается."

    # ВСТАВИТЬ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННОЙ

    # Показываем фон перед входом в бар, если он не был показан ранее
    if not persistent.background_shown:
        show bg bar_outside with dissolve
        # Меняем глобальную переменную на True, так как фон был показан
        $ persistent.background_shown = True

    # Показываем подсказку относительно перемещения по локациям, если она ещё не была закрыта
    if not info_panel_closed_1:
        show screen info_panel_door

    # Цикл для ожидания закрытия подсказки
    while not info_panel_closed_1:
        # Ждем, пока подсказка не будет закрыта
        $ renpy.pause(0.1)

    # Запускаем интерактивный экран (на нем при наведении будет подсвечиваться дверь)
    show screen barScreen with dissolve

    # Включаем интерактивное взаимодействие (пока не нажмем на дверь, не попадем внутрь бара)
    $ result = ui.interact()

    # Перемещаемся в блок внутри бара
    jump bar_inside

    return

# Блок внутри бара: подготовительный
label bar_inside:

    # Логические переменные для отслеживания, был ли запущен интеракивный фон (чтобы показать меню выбора только один раз)
    $ interactive_mode_ended_interact = 0
    $ interactive_mode_ended_up = 0
    $ interactive_mode_ended_right = 0
    $ interactive_mode_ended_left = 0

    # Логические переменные для отслеживания того, впервые мы появляемся в блоке локации или нет
    # Если впервые, то запускается диалог (КУДА НУЖНО ВСТАВИТЬ РЕПЛИКИ), иначе ничего не происходит
    $ count_pred_interact = 0
    $ count_pred_up = 0
    $ count_pred_right = 0
    $ count_pred_left = 0

    # Показываем фон бара с людьми
    show bg bar_people with fade

    "Герои зашли в бар"

    "Диалог в баре. Герой пьет, ему становится хуже"

    "Герой вырубается"

    # ВСТАВИТЬ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННЫХ

    # Перемещаемся в блок встречи с призраком
    jump meet_ghost

    return

# Блок встречи 
label meet_ghost:

    # ДОБАВИТЬ ЭФФЕКТ ПРОБУЖДЕНИЯ (МНЕ!!!!!!!!!!)

    # Показываем фон дворика за баром
    show bg street with dissolve

    "Герой просыпается и видит призрака"

    "Призрак говорит с героем"

    # ВСТАВИТЬ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННЫХ

    # Выбор, который повлияет на отношения с призраком
    menu:
        "Что делать? Внимание, ваш выбор повлияет на отношения с данным персонажем"

        # Хороший выбор
        "Успокоиться, поговорить с призраком":

            # ИНИЦИАЛИЗИРОВАТЬ В НАЧАЛЕ ЛОГИЧЕСКУЮ ПЕРЕМЕННУЮ ДРУЖБЫ С ПРИЗРАКОМ
            # УВЕЛИЧИТЬ ЕЕ ЗНАЧЕНИЕ

            "Герой и призрак разговаривают друг с другом"

            # ВСТАВИТЬ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННЫХ

            # ИЗМЕНИТЬ ТЕКСТ ВСПЛЫВАЮЩЕГО СООБЩЕНИЯ
            $ renpy.notify("Призрак рад, что ему удалось поговорить с вами")
        
            # Перемещаемся в блок диалога перед навигацией
            jump bar_interact_pred

        # Плохой выбор
        "Бежать":

            # ИНИЦИАЛИЗИРОВАТЬ В НАЧАЛЕ ЛОГИЧЕСКУЮ ПЕРЕМЕННУЮ ДРУЖБЫ С ПРИЗРАКОМ
            # УМЕНЬШИТЬ ЕЕ ЗНАЧЕНИЕ

            "Герой пытается подняться, но не может из-за плохого самочувствия"
            "Призрак подходит"

            # ВСТАВИТЬ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННЫХ

            # ИЗМЕНИТЬ ТЕКСТ ВСПЛЫВАЮЩЕГО СООБЩЕНИЯ
            $ renpy.notify("Призрак огорчен вашим выбором")
            
            # Перемещаемся в блок диалога перед навигацией
            jump bar_interact_pred


# Блок диалога перед интерактивностью (или свободной навигацией) в главном зале бара
label bar_interact_pred:

    # Инициализаруем переменную, проверяющую, нажата ли кнопка выхода из интерактивного фона
    $ closed = False

    # Показываем фон бара с людьми
    scene bg bar_people with dissolve

    "Вы вошли в бар"

    # Если мы впервые в этой локации, запускается диалог (иначе происходит переход к др. блоку без диалога)
    if count_pred_interact==0:
        "Здесь будет длинный диалог"
        # ВСТАВИТЬ НУЖНЫЕ РЕПЛИКИ ИМЕННО СЮДА!!!

        # Меняем значение переменной
        $ count_pred_interact = 1

    # Перемещаемся в блок интерактивности в главном зале бара 
    jump bar_interact

    return

# Блок интерактивности в главном зале бара
label bar_interact:

    # ЗДЕСЬ НЕ ДОЛЖНО БЫТЬ НИКАКИХ ДИАЛОГОВ, ВСЕ ДИАЛОГИ ВСТАВЛЯТЬ В БЛОК ВЫШЕ

    # Показываем подсказку относительно перемещения по локациям, если она ещё не была закрыта
    if not info_panel_closed:
        show screen info_panel

    # Меняем текущее местоположение для осуществления правильной логики навигации
    $ current_loc = "bar_front"

    # Цикл для ожидания закрытия подсказки
    while not info_panel_closed:
        # Ждем, пока подсказка не будет закрыта
        $ renpy.pause(0.1)  

    # После того как подсказка закрыта, показываем меню выбора, если мы еще не включали интерактивный экран
    if interactive_mode_ended_interact == 0:
        menu:
            "Осмотреться":

                # Закрываем диалоговое окно
                window hide

                # Показываем фон главного зала в баре, если он не был показан ранее
                if not persistent.background_shown:
                    show bg bar_people with dissolve
                    # Меняем глобальную переменную на True, так как фон был показан
                    $ persistent.background_shown = True

                # Запускаем интерактивный экран
                show screen barInteract with dissolve

                # Выведется только один раз
                "Нажмите на кнопку, если хотите выйти из интерактивного режима"

                # Меняем значение переменной, так как мы уже запустили интерактивный экран (больше нам не нужно меню выбора в этой локации)
                $ interactive_mode_ended_interact = 1

                # Включаем интерактивное взаимодействие
                $ result = ui.interact()

            "Исследовать локацию позже":
                "Продолжайте ходить по локациям"
                # Переходим в блок, который открывает экран с кнопками навигации
                jump showbuttons

    # Если мы потыкались больше, чем на 1 предмет
    else:
        # Пока не закроем интерактивный экран с помощью кнопки, кнопки навигации не появятся
        while not closed:
            # Закрываем диалоговое окно
            window hide
            # Показываем фон главного зала в баре, если он не был показан ранее
            if not persistent.background_shown:
                show bg bar_people with dissolve
                # Меняем глобальную переменную на True, так как фон был показан
                $ persistent.background_shown = True

            # Запускаем интерактивный экран
            show screen barInteract with dissolve

            # Включаем интерактивное взаимодействие
            $ result = ui.interact()

        # Если цикл прервался, то мы нажали на кнопку, значит, можно поместить на экран кнопки навигации
        jump showbuttons

    return

# Блок диалога перед интерактивностью или СН в дальней части бара (в нее можно попасть с помощью стрелок навигации)
label bar_up_pred:

    # Инициализаруем переменную, проверяющую, нажата ли кнопка выхода из интерактивного фона
    $ closed = False

    # Показываем фон дальней части бара
    scene bg bar_up with dissolve

    "Вы находитесь в баре посередине"
    
    # Если мы впервые в этой локации, запускается диалог (иначе происходит переход к др. блоку без диалога)
    if count_pred_up==0:
        "Здесь будет длинный диалог"
        # ВСТАВИТЬ НУЖНЫЕ РЕПЛИКИ ИМЕННО СЮДА!!!

        # Меняем значение переменной
        $ count_pred_up = 1

    # Перемещаемся в блок интерактивности в дальней части бара
    jump bar_up

    return

# Блок интерактивности в дальней части бара
label bar_up:

    # ЗДЕСЬ НЕ ДОЛЖНО БЫТЬ НИКАКИХ ДИАЛОГОВ, ВСЕ ДИАЛОГИ ВСТАВЛЯТЬ В БЛОК ВЫШЕ

    # Показываем фон дальней части бара
    scene bg bar_up with dissolve

    # Меняем текущую локацию, так как мы переместились в другое место
    $ current_loc = "bar_up"

    # Показываем меню выбора, если мы еще не включали интерактивный экран
    if interactive_mode_ended_up == 0:
        menu:
            "Осмотреться":
                window hide

                # Показываем фон дальней части бара, если он не был показан ранее
                if not persistent.background_shown:
                    show bg bar_up with dissolve
                    # Меняем глобальную переменную на True, так как фон был показан
                    $ persistent.background_shown = True

                # Запускаем интерактивный экран
                show screen barUp with dissolve

                # Выведется только один раз
                "Нажмите на кнопку, если хотите выйти из интерактивного режима"

                # Меняем значение переменной, так как мы уже запустили интерактивный экран (больше нам не нужно меню выбора в этой локации)
                $ interactive_mode_ended_up = 1

                # Включаем интерактивное взаимодействие
                $ result = ui.interact()

            "Исследовать локацию позже":

                "Продолжайте ходить по локациям"
                # Переходим в блок, который открывает экран с кнопками навигации
                jump showbuttons

    # Если мы потыкались больше, чем на 1 предмет
    else:
        # Пока не закроем интерактивный экран с помощью кнопки, кнопки навигации не появятся
        while not closed:
            # Закрываем диалоговое окно
            window hide
            # Показываем фон главного зала в баре, если он не был показан ранее
            if not persistent.background_shown:
                show bg bar_up with dissolve
                # Меняем глобальную переменную на True, так как фон был показан
                $ persistent.background_shown = True

            # Запускаем интерактивный экран
            show screen barUp with dissolve

            # Включаем интерактивное взаимодействие
            $ result = ui.interact()

        # Если цикл прервался, то мы нажали на кнопку, значит, можно поместить на экран кнопки навигации
        jump showbuttons

    return

# Блок перехода на другую локацию, запускается при нажатии на кнопку "вверх"
label move_bar_up:
    # Убираем экран с кнопками
    hide screen movebuttons

    # Если текущая позиция - главный зал бара, то при нажатии на кнопку "вверх"
    if current_loc == "bar_front":
        # Перемещаемся в блок диалога в дальней части бара
        jump bar_up_pred
    # Иначе локация недоступна
    else:
        "Локация недоступна"
        # Переходим в блок, который открывает экран с кнопками навигации
        jump showbuttons

    return

# Блок диалога перед интерактивностью или СН в правой части бара (в нее можно попасть с помощью стрелок навигации)
label bar_right_pred:

    # Инициализаруем переменную, проверяющую, нажата ли кнопка выхода из интерактивного фона
    $ closed = False

    # Показываем фон правой части бара
    scene bg bar_right with dissolve

    "Вы находитесь в баре с правой стороны"

    # Если мы впервые в этой локации, запускается диалог (иначе происходит переход к др. блоку без диалога)
    if count_pred_right==0:
        "Здесь будет длинный диалог"
        # ВСТАВИТЬ НУЖНЫЕ РЕПЛИКИ ИМЕННО СЮДА!!!

        # Меняем значение переменной
        $ count_pred_right = 1

    # Перемещаемся в блок интерактивности в правой части бара
    jump bar_right

    return

# Блок интерактивности в правой части бара
label bar_right:
    # Показываем фон правой части бара
    scene bg bar_right with dissolve

    # Меняем текущую локацию
    $ current_loc = "bar_right"

    # Показываем меню выбора, если мы еще не включали интерактивный экран
    if interactive_mode_ended_right == 0:
        menu:
            "Осмотреться":
                window hide

                # Показываем фон правой части бара, если он не был показан ранее
                if not persistent.background_shown:
                    show bg bar_right with dissolve
                    # Меняем глобальную переменную на True, так как фон был показан
                    $ persistent.background_shown = True

                # Запускаем интерактивный экран
                show screen barRight with dissolve

                # Выведется только один раз
                "Нажмите на кнопку, если хотите выйти из интерактивного режима"

                # Меняем значение переменной, так как мы уже запустили интерактивный экран (больше нам не нужно меню выбора в этой локации)
                $ interactive_mode_ended_right = 1

                # Включаем интерактивное взаимодействие
                $ result = ui.interact()

            "Исследовать локацию позже":
                "Продолжайте ходить по локациям"
                # Переходим в блок, который открывает экран с кнопками навигации
                jump showbuttons

    # Если мы потыкались больше, чем на 1 предмет
    else:
        # Пока не закроем интерактивный экран с помощью кнопки, кнопки навигации не появятся
        while not closed:
            # Закрываем диалоговое окно
            window hide
            # Показываем фон главного зала в баре, если он не был показан ранее
            if not persistent.background_shown:
                show bg bar_right with dissolve
                # Меняем глобальную переменную на True, так как фон был показан
                $ persistent.background_shown = True

            # Запускаем интерактивный экран
            show screen barRight with dissolve

            # Включаем интерактивное взаимодействие
            $ result = ui.interact()

        # Если цикл прервался, то мы нажали на кнопку, значит, можно поместить на экран кнопки навигации
        jump showbuttons

    return

# Блок перехода на другую локацию, запускается при нажатии на кнопку "вправо"
label move_bar_right:
    # Убираем экран с кнопками
    hide screen movebuttons

    # Если текущая позиция - главный зал бара, то при нажатии на кнопку "вправо"
    if current_loc == "bar_front":
        # Перемещаемся в блок диалога в части бара
        jump bar_right_pred
    # Иначе если текущая позиция - левая часть бара, то при нажатии на кнопку "вправо"
    elif current_loc == "bar_left":
        # Перемещаемся в блок диалога в главном зале бара
        jump bar_interact_pred
    # Иначе локация недоступна
    else:
        "Локация недоступна"
        # Переходим в блок, который открывает экран с кнопками навигации
        jump showbuttons

    return

# Блок диалога перед интерактивностью или СН в левой части бара (в нее можно попасть с помощью стрелок навигации)
label bar_left_pred:

    # Инициализаруем переменную, проверяющую, нажата ли кнопка выхода из интерактивного фона
    $ closed = False

    # Показываем фон левой части бара
    scene bg bar_left with dissolve

    "Вы находитесь в баре с левой стороны"

    # Если мы впервые в этой локации, запускается диалог (иначе происходит переход к др. блоку без диалога)
    if count_pred_left==0:
        "Здесь будет длинный диалог"
        # ВСТАВИТЬ НУЖНЫЕ РЕПЛИКИ

        # Меняем значение переменной
        $ count_pred_left = 1

    # Перемещаемся в блок интерактивности в левой части бара
    jump bar_left

    return

# Блок интерактивности в левой части бара
label bar_left:
    # Показываем фон левой части бара
    scene bg bar_left with dissolve

    # Меняем текущую локацию
    $ current_loc = "bar_left"

    # Показываем меню выбора, если мы еще не включали интерактивный экран
    if interactive_mode_ended_left == 0:
        menu:
            "Осмотреться":
                window hide

                # Показываем фон левой части бара, если он не был показан ранее
                if not persistent.background_shown:
                    show bg bar_left with dissolve
                    # Меняем глобальную переменную на True, так как фон был показан
                    $ persistent.background_shown = True

                # Запускаем интерактивный экран
                show screen barLeft with dissolve

                # Выведется только один раз
                "Нажмите на кнопку, если хотите выйти из интерактивного режима"

                # Меняем значение переменной, так как мы уже запустили интерактивный экран (больше нам не нужно меню выбора в этой локации)
                $ interactive_mode_ended_left = 1

                # Включаем интерактивное взаимодействие
                $ result = ui.interact()

            "Исследовать локацию позже":
                "Продолжайте ходить по локациям"
                # Переходим в блок, который открывает экран с кнопками навигации
                jump showbuttons

    # Если мы потыкались больше, чем на 1 предмет
    else:
        # Пока не закроем интерактивный экран с помощью кнопки, кнопки навигации не появятся
        while not closed:
            # Закрываем диалоговое окно
            window hide
            # Показываем фон левого зала в баре, если он не был показан ранее
            if not persistent.background_shown:
                show bg bar_left with dissolve
                # Меняем глобальную переменную на True, так как фон был показан
                $ persistent.background_shown = True

            # Запускаем интерактивный экран
            show screen barLeft with dissolve

            # Включаем интерактивное взаимодействие
            $ result = ui.interact()

        # Переходим в блок, который открывает экран с кнопками навигации
        jump showbuttons

    return

# Блок перехода на другую локацию, запускается при нажатии на кнопку "влево"
label move_bar_left:
    # Убираем экран с кнопками
    hide screen movebuttons

    # Если текущая позиция - главный зал бара, то при нажатии на кнопку "влево"
    if current_loc == "bar_front":
        # Перемещаемся в блок диалога в левой части бара
        jump bar_left_pred
    # Иначе если текущая позиция - правая часть бара, то при нажатии на кнопку "влево"
    elif current_loc == "bar_right":
        # Перемещаемся в блок диалога в главном зале бара
        jump bar_interact_pred
    # Иначе локация недопступна
    else:
        "Локация недоступна"
        # Переходим в блок, который открывает экран с кнопками навигации
        jump showbuttons

    return

# Блок: дворик за баром, возвращаемся к призраку после заказа выпивки
label bar_down:
    # Показываем фон дворика
    scene bg bar_down with wipeleft

    "Вы вышли из бара"

    "Диалог с призраком"

    # ВСТАВИТЬ НУЖНЫЕ РЕПЛИКИ ВМЕСТО ВЫШЕНАПИСАННЫХ

    # Выбор, который повлияет на концовку
    menu:
        "Внимание!!! Выбор, который вы сделаете, напрямую отразиться на концовке. Подумайте хорошо"
        # Хороший выбор
        "Помочь призраку":
            # ИЗМЕНИТЬ ТЕКСТ ВСПЛЫВАЮЩЕГО СООБЩЕНИЯ
            $ renpy.notify("Решение принято, от судьбы не убежать")
            # Переходим во 2 акт
            jump act2_start
        # Плохой выбор
        "Идти своей дорогой":
            # ИЗМЕНИТЬ ТЕКСТ ВСПЛЫВАЮЩЕГО СООБЩЕНИЯ
            $ renpy.notify("Решение принято, от судьбы не убежать")
            # Переходим в блок концовки
            jump ending_first

    return

# Блок перехода на другую локацию, запускается при нажатии на кнопку "вниз"
label move_bar_down:
    # Убираем экран с кнопками
    hide screen movebuttons

    # Если текущая позиция - верхняя часть бара, то при нажатии на кнопку "вниз"
    if current_loc == "bar_up":
        # Перемещаемся в блок диалога в главном зале бара
        jump bar_interact_pred

    # Иначе локация недоступна
    else:
        "Локация недоступна"
        # Переходим в блок, который открывает экран с кнопками навигации
        jump showbuttons

    return

# Блок с концовкой №1
label ending_first:
    "Концовка: одинокий бродяга"

    # Глобальная переменная, запоминающая концовку
    $ persistent.ending1 = True

    return

# Блок: начало второго акта
label act2_start:
    "Вы перешли во второй акт"
    return

    


